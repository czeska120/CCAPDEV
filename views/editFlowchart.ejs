
<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('partials/head'); -%>
    <link rel="stylesheet" type="text/css" href="/css/flowchart.css">
    <title>Edit Flowchart</title>
</head>
    <body>
        <header>
            <%- include('partials/sidebar'); -%>
        </header>
            <main>
                <div class="main-window">
                    <%- include('partials/searchbar'); -%>
                    <div class="editing-flag">
                        You are currently editing a flowchart.
                        <%=addError%>
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle btn-sm" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                              Actions
                            </button>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenu2">
                                <button class="btn btn-primary dropdown-item" data-toggle="modal" data-target="#addCourse" >Add Course</button>
                                <button class="btn btn-primary dropdown-item" data-toggle="modal" data-target="#editCourse" >Edit Course</button>
                                <button class="btn btn-primary dropdown-item" data-toggle="modal" data-target="#deleteCourse" >Delete Course</button>
                                <div class="dropdown-divider"></div>
                                <form action="/saveflowchart" method="post">
                                <input type="hidden" name="ownerId" value="<%= flowchart.accountId %>">
                                <input type="hidden" name="flowchartId" value="<%= flowchart.id %>">
                                <input type="submit" class="btn btn-primary dropdown-item" value="Save Changes">
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="flowchart-info">
                        <h1><%= flowchart.title %></h1>
                        <h4><%= flowchart.department %></h4>
                    </div>
                    <div id="flowchart-table">
                        <div class="ay">
                            <div class="col-sm-8">
                                <script>
                                    // PLEASE READ!!!!! DISREGARD SQUIGLY ERROR
                                    var schoolYear = <%= flowchart.startingYear %>;
                                    var finalAY = document.createElement('div');
                                    finalAY.className = "school-year";
                                    finalAY.innerHTML = schoolYear + "-" + (parseInt(schoolYear) + 1);
                                    document.getElementById("flowchart-table").getElementsByClassName("ay")[0].getElementsByClassName("col-sm-8")[0].appendChild(finalAY);
                            </script>
                        </div>
                        <div class="term-header">
                            <div class="term">Term 1</div>
                            <div class="term">Term 2</div>
                            <div class="term">Term 3</div>
                        </div>
                    </div>
                    <!--THIS IS WHERE WE WILL ADD EXISTING ACAD YEARS-->
                    
                    <script>

                        for(let i = 1; i < <%= flowchart.numberOfAY %>; i++){
                            createAY();
                        }

                        function createAY(){

                            const flowchartTable = document.getElementById("flowchart-table");
                            const mainCanvas = document.getElementById('canvas')

                            //MAIN PARENT
                            var newSY = document.createElement('div');
                            newSY.className = 'ay'

                            //MAIN CHILD: SY
                            var inputSY = document.createElement('div')
                            inputSY.className = 'col-sm-8'

                            //MAIN CHILDREN: term headers
                            var termHeader = document.createElement('div')
                            termHeader.className ='term-header'

                            var finalAY = document.createElement('div')
                            finalAY.className = "school-year"
                            var newAY = flowchartTable.getElementsByClassName('ay')
                            
                            newAY = newAY[newAY.length - 1].getElementsByClassName("school-year")[0].innerHTML.split("-")[0]
                            finalAY.innerHTML = (parseInt(newAY) + 1) + "-" + (parseInt(newAY) + 2)

                            //CHILD OF TERM HEADERS
                            var term1 = document.createElement('div')
                            term1.className='term'
                            term1.innerHTML='Term 1'
                            var term2 = document.createElement('div')
                            term2.className='term'
                            term2.innerHTML='Term 2'
                            var term3 = document.createElement('div')
                            term3.className='term'
                            term3.innerHTML='Term 3'

                            //INSERT ALL INTO HTML
                            flowchartTable.insertBefore(newSY, document.getElementById('ay-adder'))
                            newSY.appendChild(inputSY)
                            newSY.appendChild(termHeader)
                            inputSY.appendChild(finalAY)
                            termHeader.appendChild(term1)
                            termHeader.appendChild(term2)
                            termHeader.appendChild(term3)
                        }
                        function addSY(){
                            fetch("/addAY/<%=flowchart.id %>",{
                                method: 'POST',
                                headers: {'Content-Type': 'application/json'}
                            })
                            .then(response => response.text())
                            .catch(err => console.log(err))
                            
                            createAY();

                            // PLEASE READ!!!!! DISREGARD SQUIGLY ERROR
                            document.getElementById('canvas').style.width = (parseInt(document.getElementById('canvas').style.width) + 330) + "px";
                        }
                    </script>
                    <div id="ay-adder">
                        <button id="add-sy" onclick="addSY()">+</button>
                    </div>
                    <div id="canvas" style="width: 330px;">
                        
                        <!-- Please add the subjects here. -->
                        <% courses.forEach(function(course){ %>
                            <div class="subject" style='background: <%= course.style %>; left: <%= course.leftPosition %>px; top: <%= course.topPosition %>px'><%= course.code %></div>
                        <% }); %>
                        <svg id="svg-canvas" style="width: 330px;">
                            <script>
                                document.getElementById('canvas').style.width = 330 * <%= flowchart.numberOfAY %> + "px";
                                document.getElementById('svg-canvas').style.width = 330 * <%= flowchart.numberOfAY %> + "px";
                            </script>
                        </svg>
                    </div>
                    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js" integrity="sha256-lSjKY0/srUM9BE3dPm+c4fBo1dky2v27Gdjm2uoZaL0=" crossorigin="anonymous"></script>
                    <script>
                        const svgCanvas = document.getElementById("svg-canvas");
                        let target = document.querySelectorAll('.subject');

                        function simplifyCoordinates(targetStyle){
                            if(targetStyle === "auto"){
                                return 0;
                            } else {
                                return targetStyle.replace('px', '');
                            }
                        }

                        function strokeLine(prerequisite, requisite, prereqType){
                            var sender, receiver;
                            for(var i = 0; i < target.length; i++){
                                if(target[i].textContent === prerequisite){
                                    sender = target[i];
                                    target[i].setAttribute("data-nextCourse", `${requisite}`);
                                }
                                if(target[i].textContent === requisite){
                                    receiver = target[i];
                                    target[i].setAttribute("data-prerequisite", `${prerequisite}`);
                                }
                            }

                            var senderX, senderY, receiverX, receiverY;

                            senderX = parseInt(simplifyCoordinates(window.getComputedStyle(sender).left));
                            senderY = parseInt(simplifyCoordinates(window.getComputedStyle(sender).top));
                            receiverX = parseInt(simplifyCoordinates(window.getComputedStyle(receiver).left));
                            receiverY = parseInt(simplifyCoordinates(window.getComputedStyle(receiver).top));

                            let bezierControlX = (senderX + 110 + receiverX)/ 2;

                            console.log(prerequisite + " TO " + requisite + " SENDER: "+ senderX + ", " + senderY + " RECEIVER: " + receiverX + ", " + receiverY + " BEZIER: " + bezierControlX);

                            var path = document.createElementNS("http://www.w3.org/2000/svg", "path");
                            path.setAttribute("id", `${prerequisite}-${requisite}`);
                            path.setAttribute("data-sender", `${prerequisite}`);
                            path.setAttribute("data-receiver", `${requisite}`);

                            path.setAttribute("d", `M ${senderX + 100}, ${senderY + 30},
                                                    C ${bezierControlX}, ${senderY + 30}
                                                    ${bezierControlX}, ${receiverY + 30}
                                                    ${receiverX + 10}, ${receiverY + 30}`);
                            path.setAttribute("stroke", "black");
                            if(prereqType == "2"){
                                path.setAttribute("stroke-dasharray", "5, 5");
                            }
                            path.setAttribute("fill", "transparent");

                            svgCanvas.appendChild(path);
                        }

                        <% 
                            var coursesInFlowchart = courses;

                            var targetCourse, targetCoursePrereq;
                            for(var i = 0; i < coursesInFlowchart.length; i++){
                                if(coursesInFlowchart[i].prereqId != null){
                                    targetCourse = coursesInFlowchart[i]
                                    for(var j = 0; i < coursesInFlowchart.length; j++){
                                        if(coursesInFlowchart[j]._id == targetCourse.prereqId){
                                            targetCoursePrereq = coursesInFlowchart[j];
                                            %> strokeLine("<%= targetCoursePrereq.code %>", "<%= targetCourse. code%>", "<%= targetCourse.prereqType %>"); <%
                                            break;
                                        }
                                    }
                                }
                            } 
                        %>

                        function contains(selector, text) {
                            var elements = document.querySelectorAll(selector);
                            return Array.prototype.filter.call(elements, function(element){
                            return RegExp(text).test(element.textContent);
                            });
                        }
                        $(".subject").draggable({
                            containment: $("#canvas"),
                            cursor: "grabbing",
                            grid: [110, 60],
                            drag: function(event, ui){
                                var prereqLineSender = this.dataset.prerequisite;
                                var nextCourseLineReceiver = this.dataset.nextcourse;
                                
                                var prereqPath = document.querySelector(`[data-sender='${prereqLineSender}']`);
                                var nextCoursePath = document.querySelector(`[data-receiver='${nextCourseLineReceiver}']`);

                                if(prereqPath != null){
                                    let children = prereqPath.id.split("-");
                                    console.log(children[0], children[1]);

                                    let sender = contains('div', children[0]);
                                    let receiver = contains('div', children[1]);

                                    var senderX = parseInt(simplifyCoordinates(window.getComputedStyle(sender[3]).left));
                                    var senderY = parseInt(simplifyCoordinates(window.getComputedStyle(sender[3]).top));
                                    var receiverX = parseInt(simplifyCoordinates(window.getComputedStyle(receiver[3]).left));
                                    var receiverY = parseInt(simplifyCoordinates(window.getComputedStyle(receiver[3]).top));

                                    console.log(senderX + " " + senderY + " " + receiverX + " " + receiverY);

                                    let bezierControlX = (senderX + 110 + receiverX)/ 2;

                                    prereqPath.setAttribute("d", `M ${senderX + 100}, ${senderY + 30},
                                                            C ${bezierControlX}, ${senderY + 30}
                                                            ${bezierControlX}, ${receiverY + 30}
                                                            ${receiverX + 10}, ${receiverY + 30}`);
                                }
                                if(nextCoursePath != null){
                                    let children = nextCoursePath.id.split("-");
                                    console.log(children[0], children[1]);

                                    let sender = contains('div', children[0]);
                                    let receiver = contains('div', children[1]);

                                    var senderX = parseInt(simplifyCoordinates(window.getComputedStyle(sender[3]).left));
                                    var senderY = parseInt(simplifyCoordinates(window.getComputedStyle(sender[3]).top));
                                    var receiverX = parseInt(simplifyCoordinates(window.getComputedStyle(receiver[3]).left));
                                    var receiverY = parseInt(simplifyCoordinates(window.getComputedStyle(receiver[3]).top));

                                    console.log(senderX + " " + senderY + " " + receiverX + " " + receiverY);

                                    let bezierControlX = (senderX + 110 + receiverX)/ 2;

                                    nextCoursePath.setAttribute("d", `M ${senderX + 100}, ${senderY + 30},
                                                            C ${bezierControlX}, ${senderY + 30}
                                                            ${bezierControlX}, ${receiverY + 30}
                                                            ${receiverX + 10}, ${receiverY + 30}`);
                                }                   
                            },
                            stop: function(e, ui){
                                var leftSize = Math.round(parseInt(this.style.left, 10) / 10) * 10 ;
                                var topSize = Math.round(parseInt(this.style.top, 10) / 10) * 10 ;
                                var targetSubject = this.innerHTML;
                               
                                var params = {
                                    left: leftSize,
                                    top: topSize,
                                    code: targetSubject, 
                                    ownerId: <%- JSON.stringify(flowchart.accountId) %>, 
                                    flowchartId: <%- JSON.stringify(flowchart.id) %>
                                };
                                

                                this.style.left = leftSize + "px";
                                this.style.top = topSize + "px";
                                
                                
                                fetch('/savePosition', {
                                    method: 'POST',
                                    body: JSON.stringify({params}),
                                    headers: {'Content-Type': 'application/json'}
                                }).then(response => response.text())
                                .then(params => console.log(params))
                                .catch(err => console.log(err))
                            }
                        })
                    </script>
                </div>
            </div>
            <input type="hidden" name="flowchartId" value="<%= flowchart.id %>">
            <!-- Modals -->
            <!-- ADD COURSE MODAL -->
            <div class="modal fade" id="addCourse" tabindex="-1" role="dialog" aria-labelledby="addCourseLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title" id="myModalLabel"><b>Add Course</b></h4>            
                        </div>
                        <form action="/addCourse" method="post">
                            <div class="modal-body">
                                <div class="form-group row">
                                    <label for="courseCode" class="col-sm-3 col-form-label"><b>Course Code</b></label>
                                    <div class="col-sm-7">
                                        <input id="new-course-id" required="true" class="form-control form-control-sm" type="text" placeholder="Course Code here" name="code">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="profCode" class="col-sm-3 col-form-label"><b>Professor</b></label>
                                    <div class="col-sm-7">
                                        <input id="new-prof-id" required="true" class="form-control form-control-sm" type="text" placeholder="Name of Professor" name="prof">
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="unitCode" class="col-sm-3 col-form-label"><b>Units</b></label>
                                    <div class="col-sm-7">
                                        <input id="new-unit-id" required="true" class="form-control form-control-sm" type="number" placeholder="Units" name="units" min="0" max="3">                          
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="statusCode" class="col-sm-3 col-form-label"><b>Status</b></label>
                                    <div class="col-sm-7">
                                    <select class="form-select form-select-sm" required="true" aria-label="Status selection" name="status">
                                            <option selected>Indicate course progress...</option>
                                            <option value="1">Not Yet Taken</option>
                                            <option value="2">Currently Taking</option>
                                            <option value="3">Passed</option>
                                            <option value="4">Failed</option>
                                            <option value="5">Dropped</option>
                                    </select>                                
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="prerequisite" class="col-sm-3 col-form-label"><b>Prerequisite</b></label>
                                    <div class="col-sm-7">
                                    <select id="prerequisiteId" name="prerequisite" aria-label="Prerequisite selection" class="form-select form-select-sm">
                                        <option disabled selected value> Select a course </option>
                                        <% courses.forEach(function(course){ %> 
                                            <option value="<%= course._id %>"><%= course.code %></option>
                                        <% }); %> 
                                    </select>                                
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="prereqType" class="col-sm-3 col-form-label"><b>Pre-requisite Type</b></label>
                                    <div class="col-sm-7">
                                    <select id="prereqTypeId" class="form-select form-select-sm" aria-label="Line selection" name="lineType">
                                            <option selected>Indicate pre-requisite type...</option>
                                            <option value="1">Hard pre-requisite</option>
                                            <option value="2">Soft pre-requisite</option>
                                    </select>                                
                                    </div>
                                </div>
                                <script>
                                    $("#prereqTypeId").prop("disabled", true);
                                    $("#prerequisiteId").click(function(){
                                        $("#prereqTypeId").prop("disabled", false);
                                    });
                                </script>
                            </div>
                               
                            <div class="modal-footer">
                                <input type="hidden" name="flowchartId" value="<%= flowchart.id %>">
                                <input type="hidden" name="state" value="2">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Add course</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- EDIT COURSE MODAL -->
            <div class="modal fade" id="editCourse" tabindex="-1" role="dialog" aria-labelledby="editCourseLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title" id="myModalLabel">Edit Course</h4>
                        </div>
                        <!-- <form action="/addCourse" method="post"> -->
                        <div class="modal-body">
                            <table style="width:100%">
                            <% courses.forEach(function(course){ %>   
                                <tr>
                                <td><label class="form-check-label"><%= course.code %></label></td>
                                </tr><tr style="border-bottom: 1px solid rgb(176, 176, 176);">
                                <td><small class="text-muted">Professor: <%= course.professor %></small></td>
                                <td><small class="text-muted">Units: <%= course.units %></small></td>
                                <td><small class="text-muted">Status: <%= course.status %></small></td>
                                <!-- <button type="submit" class="btn btn-success btn-sm" data-toggle="#updateChosen">Add course</button> -->

                                <td style="padding-bottom:1em"><a href="/editCourse/<%= course.id %>" class="btn btn-success btn-sm" data-toggle="#updateChosen"> Edit </a></td>
                                </tr> 
                            <% }); %> 
                            </table>                
                        </div>
                        <div class="modal-footer">
                            <input type="hidden" name="flowchartId" value="<%= flowchart.id %>">
                            <input type="hidden" name="state" value="2">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                        <!-- </form> -->
                    </div>
                </div>
            </div>

            <% courses.forEach(function(course){ %>             
            <div class="modal fade" id="updateChosen" tabindex="-1" role="dialog" aria-labelledby="updateChosenLabel" aria-hidden="true">
                <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel"><b>Editing <%= course.code %></b></h4>  
                    </div>
                    <form action="/updateChosen" method="post">
                        <input type="hidden" value="<%= course.id %>" name="id">
                        <div class="modal-body">
                            <div class="form-group row">
                                <label for="courseCode" class="col-sm-3 col-form-label"><b>Course Code</b></label>
                                <div class="col-sm-7">
                                    <input id="new-course-id" class="form-control form-control-sm" type="text" name="code" value="<%= course.code %>">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="profCode" class="col-sm-3 col-form-label"><b>Professor</b></label>
                                <div class="col-sm-7">
                                    <input id="new-prof-id" class="form-control form-control-sm" type="text" name="prof" value="<%= course.professor %>">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="unitCode" class="col-sm-3 col-form-label"><b>Units</b></label>
                                <div class="col-sm-7">
                                    <input id="new-unit-id" class="form-control form-control-sm" type="number" name="units" min="0" max="3" value="<%= course.units %>">                          
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="statusCode" class="col-sm-3 col-form-label"><b>Status</b></label>
                                <div class="col-sm-7">
                                    <select class="form-select form-select-sm" aria-label="Status selection">
                                        <option selected>Indicate course progress...</option>
                                        <option value="1">Not Yet Taken</option>
                                        <option value="2">Currently Taking</option>
                                        <option value="3">Passed</option>
                                        <option value="4">Failed</option>
                                        <option value="5">Dropped</option>
                                    </select>                                
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <input type="hidden" name="flowchartId" value="<%= flowchart.id %>">
                            <input type="hidden" name="state" value="2">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save changes</button>
                        </div>
                    </form>
                </div>
                </div>
            </div>
            <% }); %> 

            <!-- DELETE COURSE MODAL -->
            <div class="modal fade" id="deleteCourse" tabindex="-1" role="dialog" aria-labelledby="deleteCourseLabel" aria-hidden="true">
            <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Delete Course</h4>
                </div>
                <div class="modal-body">
                    <table style="width:100%">
                    <% courses.forEach(function(course){ %>   
                        <tr>
                        <td><label class="form-check-label"><%= course.code %></label></td>
                        </tr><tr style="border-bottom: 1px solid rgb(176, 176, 176);">
                        <td><small class="text-muted">Professor: <%= course.professor %></small></td>
                        <td><small class="text-muted">Units: <%= course.units %></small></td>
                        <td><small class="text-muted">Status: <%= course.status %></small></td>
                        <td style="padding-bottom:1em"><a href="/deleteCourse/<%= course.id %>" class="btn btn-danger btn-sm"> Delete </a></td>
                        </tr> 
                    <% }); %> 
                    </table>                
                </div>
                <div class="modal-footer">
                    <input type="hidden" name="state" value="2">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
            </div>
            </div>
        </main>
        <%- include('partials/footer'); -%>
    </body>
</html>
